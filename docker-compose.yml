version: "3.9"

services:
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile.visualize
    deploy:
      resources:
        limits:
          memory: '150M'
    hostname: monitoring_grafana

    profiles:
      - grafana
      - all
    networks:
      - router
      - default
      - trace
    ports:
      - 3001:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/dashboards
      - grafana_data:/var/lib/grafana
  backup:
    image: alpine:latest
    deploy:
      resources:
        limits:
          memory: '10M'
    volumes:
      - grafana_data:/grafana_source
      - ./grafana-backup:/grafana_dest
    profiles:
      - backup
  jaeger:
    image: jaegertracing/all-in-one:latest
    deploy:
      resources:
        limits:
          memory: '50M'
    hostname: monitoring
    environment: 
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    volumes:
      - ./jaeger/badger:/badger
    ports:
      - 8000:16686
        #- 14268:14268
    networks:
      - trace
    profiles:
      - jaeger
  prometheus:
    image: prom/prometheus
    deploy:
      resources:
        limits:
          memory: '250M'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090
    networks:
      - trace
    profiles:
      - prometheus
      - all
  temperature-collector:
    build:
      context: ./go-temperature-collector
    deploy:
      resources:
        limits:
          memory: '10M'
    profiles:
      - temperature
      - collector
      - all
    networks:
      - trace
  container-resource-collector:
    build:
      context: ./container-resource-collector
    deploy:
      resources:
        limits:
          memory: '10M'
    profiles:
      - container-resource
      - collector
      - all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - trace
  loki:
    image: grafana/loki:latest
    hostname: monitoring_loki
    ports:
      - 3100:3100
    # command: -config.gile=/etc/loki/local-config.yaml
    volumes:
      # - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki/storage:/loki
    networks:
      - trace
  fluent-bit:
    image: grafana/fluent-bit-plugin-loki
    networks:
      - trace
    volumes:
      - ./fluent-bit:/fluent-bit/etc/
    command: [
      "/fluent-bit/bin/fluent-bit",
      "-R",
      "/fluent-bit/etc/parsers.conf",
      "-e",
      "/fluent-bit/bin/out_grafana_loki.so",
      "-c",
      "/fluent-bit/etc/fluent-bit.conf"
    ]


volumes:
  postgres_data:
  grafana_data:

networks:
  router:
    driver: bridge
    name: router
  default:
  trace:
    driver: bridge
    name: trace
